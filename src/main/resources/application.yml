spring:
  #  datasource:
  #    url: jdbc:mysql://
  #    username:
  #    password:
  #    driver-class-name: com.mysql.jdbc.Driver
#  jpa:
#    hibernate:
#      ddl-auto: create
#  h2:
#    console:
#      enabled: true
#      path: /console
#  devtools:
#    livereload:
#      enabled: true

facebook :
  client :
    clientId :
    clientSecret:
    accessTokenUri: https://graph.facebook.com/oauth/access_token
    userAuthorizationUri: https://www.facebook.com/dialog/oauth?display=popup
    tokenName: oauth_token
    authenticationScheme: query
    clientAuthenticationScheme: form
    scope: email
  resource:
    userInfoUri: https://graph.facebook.com/me?fields=id,name,email,link

google :
  client :
    clientId : 926975797714-ujlj7qftgj19d6a4l4310mmt1kb0656e.apps.googleusercontent.com
    clientSecret: WG1TKmI-GxjP-YUm9W7RfGRr
    accessTokenUri: https://accounts.google.com/o/oauth2/token
    userAuthorizationUri: https://accounts.google.com/o/oauth2/auth
    scope: email, profile
  resource:
    userInfoUri: https://www.googleapis.com/oauth2/v2/userinfo
    #userInfoUri: https://www.googleapis.com/auth/userinfo.profile

kakao :
  client :
    clientId : 9152903591a3cd1b674f8c7231a3ba76
    accessTokenUri: https://kauth.kakao.com/oauth/token
    userAuthorizationUri: https://kauth.kakao.com/oauth/authorize
  resource:
    userInfoUri: https://kapi.kakao.com/v1/user/me

# 시크릿 키 보관 방식 실무에서 쓰는 방법
# 1. 스프링 고유 기능중에 다른 깃에서 설정땡겨오는 기능이있음. (내부 깃으로)
# 2. 이그노어 쳐놓고 별도 파일로 배포시에 설정파일은 따로 배포 (제가 쓰는방식)